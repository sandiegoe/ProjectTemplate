#config
server.port=8080
server.servlet.context-path=/SSM_Demo

#mysql
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/ssm_demo?useSSL=false&useCharacter=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=j49OeGmezvXxAeOv25rqzp+XHnSJZPirnwQeB0v2UeVYF0UjQgE17WcYqXzgg+wxHmyUaf6RIAWTQdRL5B0hog==
#使用druid加密数据库的公钥
spring.datasource.publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJSH0Jg9GQpTdaDEADeGeVnc8L57U5V3BW+KSPOS5HGQUbnfejC47pj7C0jW82KXU7MVRTkmrZ0i5VP5U3ejDCsCAwEAAQ==
#初始化连接数
spring.datasource.initialSize=5
#最小连接数
spring.datasource.minIdle=5
#最大连接数
spring.datasource.maxActive=20
#配置获取连接超时等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
#验证数据库是否链接
spring.datasource.validationQuery=SELECT 1 FROM DUAL
#当链接空闲时，是否测试链接可用性
spring.datasource.testWhileIdle=true
#当从连接池拿到连接时，是否测试连接的可用性
spring.datasource.testOnBorrow=false
#当链接归还连接池时，是否测试链接可用性
spring.datasource.testOnReturn=false
# 控制PSCache（内存占用优化，大幅度提升sql执行性能，支持oracle，db2，sql server,不支持mysql）
spring.datasource.poolPreparedStatements=false
#指定每个连接上PSCache的大小
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=config,stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrpt=true;
spring.datasource.logSlowSql=true

#mybatis
mybatis.type-aliases-package=top.arexstorm.top.entity
mybatis.mapper-locations=classpath:mapper/*.xml

